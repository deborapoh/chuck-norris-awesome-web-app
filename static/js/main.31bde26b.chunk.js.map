{"version":3,"sources":["utils/constants.js","store/AppContext.js","assets/categories/animal.svg","assets/categories/career.svg","assets/categories/celebrity.svg","assets/categories/dev.svg","assets/categories/explicit.svg","assets/categories/fashion.svg","assets/categories/food.svg","assets/categories/history.svg","assets/categories/money.svg","assets/categories/movie.svg","assets/categories/music.svg","assets/categories/political.svg","assets/categories/religion.svg","assets/categories/science.svg","assets/categories/sport.svg","assets/categories/travel.svg","assets/categories/new-category.svg","router/routes.js","styles/GlobalStyle.js","router/index.js","store/index.js","store/CategoryStore.js","store/JokeStore.js","App.js","serviceWorker.js","index.js"],"names":["ROUTES","WELCOME","HOME","JOKE","CATEGORIES","animal","career","celebrity","dev","explicit","fashion","food","history","money","movie","music","political","religion","science","sport","travel","newCategory","MESSAGES_LANGUAGES","en","messages_en","pt","messages_pt","AppContext","createContext","module","exports","routes","a","Promise","constants","name","path","loader","all","GlobalStyle","createGlobalStyle","Router","useState","nav","setNav","useEffect","updateNav","routesList","require","NAVIGATIONS","map","Component","default","key","exact","render","props","selectedCategory","setSelectedCategory","getCategoryStore","currentJoke","setCurrentJoke","icon","setIcon","getJokeStore","App","locale","messages","Provider","value","store","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.31bde26b.chunk.js","sourcesContent":["/**\n * App constants\n */\n\n// Image imports\nimport animal from \"~/assets/categories/animal.svg\";\nimport career from \"~/assets/categories/career.svg\";\nimport celebrity from \"~/assets/categories/celebrity.svg\";\nimport dev from \"~/assets/categories/dev.svg\";\nimport explicit from \"~/assets/categories/explicit.svg\";\nimport fashion from \"~/assets/categories/fashion.svg\";\nimport food from \"~/assets/categories/food.svg\";\nimport history from \"~/assets/categories/history.svg\";\nimport money from \"~/assets/categories/money.svg\";\nimport movie from \"~/assets/categories/movie.svg\";\nimport music from \"~/assets/categories/music.svg\";\nimport political from \"~/assets/categories/political.svg\";\nimport religion from \"~/assets/categories/religion.svg\";\nimport science from \"~/assets/categories/science.svg\";\nimport sport from \"~/assets/categories/sport.svg\";\nimport travel from \"~/assets/categories/travel.svg\";\nimport newCategory from \"~/assets/categories/new-category.svg\";\n\nimport messages_en from \"~/translations/en.json\";\nimport messages_pt from \"~/translations/pt.json\";\n\nexport default {\n  ROUTES: {\n    WELCOME: \"/\",\n    HOME: \"/home\",\n    JOKE: \"/joke\"\n  },\n  CATEGORIES: {\n    animal,\n    career,\n    celebrity,\n    dev,\n    explicit,\n    fashion,\n    food,\n    history,\n    money,\n    movie,\n    music,\n    political,\n    religion,\n    science,\n    sport,\n    travel,\n    newCategory\n  },\n  MESSAGES_LANGUAGES: {\n    en: messages_en,\n    pt: messages_pt\n  }\n};\n","// Node modules imports\nimport { createContext } from \"react\";\n\nconst AppContext = createContext({});\n\nexport default AppContext;\n","module.exports = __webpack_public_path__ + \"static/media/animal.bf3e5c26.svg\";","module.exports = __webpack_public_path__ + \"static/media/career.4425636f.svg\";","module.exports = __webpack_public_path__ + \"static/media/celebrity.1f868462.svg\";","module.exports = __webpack_public_path__ + \"static/media/dev.dda7e7d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/explicit.bcba2444.svg\";","module.exports = __webpack_public_path__ + \"static/media/fashion.87244a3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/food.534327f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/history.189608d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/money.eafd4f22.svg\";","module.exports = __webpack_public_path__ + \"static/media/movie.5a9031ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/music.e2bf6c59.svg\";","module.exports = __webpack_public_path__ + \"static/media/political.a65fbc4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/religion.5a3437d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/science.b7336224.svg\";","module.exports = __webpack_public_path__ + \"static/media/sport.d48a1fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/travel.5ec79f7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/new-category.168548cb.svg\";","// Utils imports\nimport constants from \"~/utils/constants\";\n\nexport const routes = async () =>\n  await Promise.all([\n    {\n      name: \"WELCOME\",\n      path: constants.ROUTES.WELCOME,\n      loader: await import(\"../pages/Welcome\")\n    },\n    {\n      name: \"HOME\",\n      path: constants.ROUTES.HOME,\n      loader: await import(\"../pages/Home\")\n    },\n    {\n      name: \"JOKE\",\n      path: `${constants.ROUTES.JOKE}/:category`,\n      loader: await import(\"../pages/Joke\")\n    }\n  ]);\n","// Node modules imports\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    width: 100vw;\n    height: 100vh;\n    font-family: Poppins, sans-serif;\n    margin: 0;\n  }\n`;\n\nexport default GlobalStyle;\n","// Node modules imports\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// Style imports\nimport GlobalStyles from \"~/styles/GlobalStyle\";\n\nconst Router = () => {\n  const [nav, setNav] = useState(null);\n\n  useEffect(() => {\n    updateNav();\n  }, []);\n\n  const updateNav = async () => {\n    let routesList = null;\n    routesList = require(\"./routes\").routes;\n\n    const NAVIGATIONS = await routesList();\n    setNav(NAVIGATIONS);\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <Switch>\n        {nav &&\n          nav.map(({ name, path, loader: { default: Component } }) => (\n            <Route\n              key={name}\n              exact\n              path={path}\n              render={props => <Component {...props} />}\n            />\n          ))}\n      </Switch>\n    </>\n  );\n};\n\nexport default Router;\n","import getCategoryStore from \"./CategoryStore\";\nimport getJokeStore from \"./JokeStore\";\n\nexport default () => ({\n  ...getCategoryStore(),\n  ...getJokeStore()\n});\n","// Node modules imports\nimport { useState } from \"react\";\n\nexport default () => {\n  const [selectedCategory, setSelectedCategory] = useState(null);\n\n  return {\n    selectedCategory,\n    setSelectedCategory\n  };\n};\n","// Node modules imports\nimport { useState } from \"react\";\n\nexport default () => {\n  const [currentJoke, setCurrentJoke] = useState(null);\n  const [icon, setIcon] = useState(null);\n\n  return {\n    currentJoke,\n    setCurrentJoke,\n    icon,\n    setIcon\n  };\n};\n","// Node modules import\nimport React from \"react\";\nimport Router from \"~/router\";\nimport { IntlProvider } from \"react-intl\";\n\n// Style imports\nimport GlobalStyle from \"~/styles/GlobalStyle\";\n\n// Utils imports\nimport constants from \"~/utils/constants\";\n\n// Context imports\nimport AppContext from \"~/store/AppContext\";\nimport store from \"~/store\";\n\nconst App = () => (\n  <IntlProvider\n    // locale={constants.LANGUAGE}\n    // messages={constants.MESSAGES_LANGUAGES[constants.LANGUAGE]}\n    locale=\"en\"\n    messages={constants.MESSAGES_LANGUAGES[\"en\"]}\n  >\n    <GlobalStyle />\n    <AppContext.Provider value={store()}>\n      <Router />\n    </AppContext.Provider>\n  </IntlProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Node modules imports\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}